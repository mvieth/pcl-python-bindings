name: Wheels

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
     - master
  release:
    types:
      - published

env:
  FORCE_COLOR: 3

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v4
      with:
        name: cibw-sdist
        path: dist/*.tar.gz


  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13]
        #, windows-latest TODO later
        #, macos-latest Necessary if we build macos-13?

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - uses: pypa/cibuildwheel@v3.1
      env:
        CIBW_ENABLE: cpython-prerelease
        # Skip pypy (pp) for now, also skip i686 and musllinux for now, they need additional dockerimages with PCL preinstalled
        CIBW_SKIP: "pp*-macosx_x86_64 pp*-manylinux_* *-manylinux_i686 *-musllinux_*"
        # alternatively xvfb to run visualization test?
        CIBW_TEST_COMMAND_LINUX: pytest {project}/tests -k 'not test_basic_visualization_functionality'
        # Some .so files are in these lib64 paths, which auditwheel does not seem to search automatically
        CIBW_REPAIR_WHEEL_COMMAND_LINUX: "LD_LIBRARY_PATH=/usr/local/lib64/:/usr/lib64/ auditwheel repair -w {dest_dir} {wheel}"
        # Maybe useful later?
        #CIBW_BEFORE_BUILD_WINDOWS: "pip install delvewheel"
        #CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel repair -w {dest_dir} {wheel}"
        CIBW_ARCHS_WINDOWS: auto ARM64
        CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET="13.0"
        CIBW_BEFORE_ALL_MACOS: brew install pcl
        CIBW_MANYLINUX_X86_64_IMAGE: markusvieth/pcl-manylinux_2_28:x86_64_latest
        # Add images for i686 and musllinux later?

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - uses: actions/upload-artifact@v4
      with:
        name: cibw-wheels-${{ matrix.os }}
        path: wheelhouse/*.whl


  upload_all:
    name: Upload if release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    environment: pypi
    permissions:
      id-token: write
      attestations: write

    steps:
    - uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - uses: actions/download-artifact@v4
      with:
        pattern: cibw-*
        merge-multiple: true
        path: dist

    - name: Generate artifact attestation for sdist and wheels
      uses: actions/attest-build-provenance@v2
      with:
        subject-path: "dist/*"

    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        attestations: true